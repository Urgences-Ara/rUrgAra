% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_delais.R
\name{plot_delais_intervals}
\alias{plot_delais_intervals}
\title{Plot des délais entre points temporels}
\usage{
plot_delais_intervals(
  base,
  time_points,
  tab_delay = NULL,
  lower_bound = -Inf,
  upper_bound = Inf,
  min_display = 5
)
}
\arguments{
\item{base}{Un \code{data.frame} / \code{tibble} contenant les variables de date/heure
(POSIXct) utilisées pour calculer les délais.}

\item{time_points}{Vecteur \strong{nommé} (\verb{named character}) où les \strong{valeurs}
sont les noms de colonnes de \code{base} (ex. \code{"t0"}, \code{"t1"}, …) et les \strong{noms}
(\code{names(time_points)}) sont les libellés à afficher (ex. \code{"Admission"},
\code{"1ère PEC"}, …). L'ordre de ce vecteur définit l'ordre horizontal.}

\item{tab_delay}{Par défaut \code{NULL}. Sinon, un objet à \strong{2 colonnes}
(\code{data.frame} / \code{tibble} / \code{matrix}) indiquant, par ligne, une paire
\verb{(d1, d2)} de variables pour lesquelles calculer/afficher le délai.
Les valeurs de \code{d1} et \code{d2} doivent correspondre aux \strong{valeurs} de
\code{time_points} (c.-à-d. aux noms de colonnes dans \code{base}), pas aux libellés.}

\item{lower_bound, upper_bound}{Bornes numériques passées à
\code{fct_calc_delay()} pour contraindre/tronquer le délai (par ex. exclure les
valeurs hors bornes). Par défaut \code{-Inf} et \code{Inf}.}

\item{min_display}{Le nombre minimal de patient de délai valide pour afficher
la médiane et l'interquartile. Remplacé par "X" sinon.}
}
\value{
Un objet \code{\link[ggplot2:ggplot]{ggplot2::ggplot}} représentant le diagramme des délais.
}
\description{
Génère un diagramme représentant les délais entre paires ordonnées de points
temporels présents dans \code{base}. Les “points” (événements) sont positionnés
sur l’axe des abscisses selon l’ordre de \code{time_points}. Chaque délai est
tracé sous forme de segment fléché entre deux points, avec un libellé et une
organisation verticale (pistes) pour éviter les chevauchements.
}
\details{
\itemize{
\item Si \code{tab_delay = NULL}, la fonction considère \strong{toutes} les paires
ordonnées \eqn{(d1, d2)} telles que \code{d1} précède \code{d2} dans l'ordre de
\code{time_points}.
\item La position verticale (piste \code{y}) des délais est calculée par
\code{fct_assign_y_tracks()} pour limiter les recouvrements de segments.
\item Le calcul des délais et la génération des libellés sont délégués à
\code{fct_calc_delay()}. Cette fonction doit retourner au moins une colonne
\code{lab_del} (libellé) et les éventuelles valeurs numériques nécessaires.
\item Les étiquettes en haut de la grille verticale affichent le libellé
(\code{names(time_points)}) et \code{n}, le nombre de valeurs non manquantes dans
\code{base} pour chaque variable.
\item Les fonctions utilitaires \code{fct_assign_y_tracks()} et \code{fct_calc_delay()} doivent
être disponibles dans l'environnement.
}
}
\examples{
# --- Données jouets
set.seed(1)
base <- tibble::tibble(
  t0 = as.POSIXct("2024-01-01 08:00:00", tz = "UTC") + runif(50, 0, 2*3600),
  t1 = t0 + runif(50, 10, 60) * 60,  # +10 à +60 minutes
  t2 = t1 + runif(50,  5, 45) * 60   # +5 à +45 minutes
)

# time_points : valeurs = noms de colonnes ; noms = libellés
time_pts <- c("Admission" = "t0", "1ère PEC" = "t1", "Sortie" = "t2")

# 1) Plot de toutes les paires (par défaut)
p1 <- plot_delais_intervals(base, time_pts)
p1

# 2) Sous-ensemble de paires
td <- data.frame(d1 = c("t0","t1"), d2 = c("t1","t2"))
p2 <- plot_delais_intervals(base, time_pts, tab_delay = td)
p2

# 3) Bornes des délais (exemple)
p3 <- plot_delais_intervals(base, time_pts, lower_bound = 0, upper_bound = Inf)
p3
}
